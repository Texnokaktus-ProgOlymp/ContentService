// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Texnokaktus.ProgOlymp.ContentService.DataAccess.Context;

#nullable disable

namespace Texnokaktus.ProgOlymp.ContentService.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ContentService.DataAccess.Entities.ContentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ContestStage")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<string>("OverrideContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OverrideFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemAlias")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ContestName", "ContestStage", "ProblemAlias", "ShortName")
                        .IsUnique()
                        .HasFilter("[ContestStage] IS NOT NULL AND [ProblemAlias] IS NOT NULL");

                    b.ToTable("ContentItems");

                    b.HasDiscriminator().HasValue("ContentItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ContentService.DataAccess.Entities.GitHubReleaseItem", b =>
                {
                    b.HasBaseType("Texnokaktus.ProgOlymp.ContentService.DataAccess.Entities.ContentItem");

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepositoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("GitHubReleaseItem");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ContentService.DataAccess.Entities.S3Item", b =>
                {
                    b.HasBaseType("Texnokaktus.ProgOlymp.ContentService.DataAccess.Entities.ContentItem");

                    b.Property<string>("BucketName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("S3Item");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ContentService.DataAccess.Entities.YandexContestProblemTestItem", b =>
                {
                    b.HasBaseType("Texnokaktus.ProgOlymp.ContentService.DataAccess.Entities.ContentItem");

                    b.Property<string>("ProblemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("YandexContestProblemTestItem");
                });
#pragma warning restore 612, 618
        }
    }
}
